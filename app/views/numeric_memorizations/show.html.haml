-# @TODO レベルボタンに桁数と秒数を表示
-# @TODO カウントダウン用ディスプレイを作成
#container
  #level_disp
    %ul
      %li.level_btn{"data-level_info" => [1, 10, 60]} LEVEL1
      %li.level_btn{"data-level_info" => [2, 10, 50]} LEVEL2
      %li.level_btn{"data-level_info" => [3, 10, 40]} LEVEL3
      %li.level_btn{"data-level_info" => [4, 10, 30]} LEVEL4
      %li.level_btn{"data-level_info" => [5, 10, 20]} LEVEL5
      %li.level_btn{"data-level_info" => [6, 10, 10]} LEVEL6
      %li.level_btn{"data-level_info" => [7, 15, 20]} LEVEL7
      %li.level_btn{"data-level_info" => [8, 15, 15]} LEVEL8
      %li.level_btn{"data-level_info" => [9, 20, 20]} LEVEL9
      %li.level_btn{"data-level_info" => [10, 30, 30]} LEVEL10

  #level_info_disp
    %table
      %tr
        %th レベル
      %tr
        %td#level_info_level
      %tr
        %th 桁数
      %tr
        %td#level_info_digit
      %tr
        %th 制限時間
      %tr
        %td#level_info_time

  #show_num_disp

  #answer_disp
    %input#answerInput{type: "tel"}
    #answerErrorBox
    #answerBtn 答える

  #result_disp
    %table
      %tr
        %th あなたの回答
      %tr
        %td#submission_num
      %tr
        %th 正解
      %tr
        %td#correct_num
      %tr
        %th 成績
      %tr
        %td#result_record
    #reset レベルを選択する


:coffee
  $ ->
    ## プロパティー
    # レベル選択画面のプロパティー
    $level_disp = $('#level_disp')
    $level_btn = $('.level_btn')
    # レベル情報画面のプロパティー
    $level_info_disp = $('#level_info_disp')
    $level_info_level = $('#level_info_level')
    $level_info_digit = $('#level_info_digit')
    $level_info_time = $('#level_info_time')
    # 問題画面を表示する画面のプロパティー
    $show_num_disp = $('#show_num_disp')
    # 回答画面のプロパティー
    $answer_disp = $('#answer_disp')
    $answerInput = $('#answerInput') # 回答フォーム
    $answerErrorBox = $('#answerErrorBox') # 回答に問題があった場合にエラーを表示するための領域
    $answerBtn = $('#answerBtn') # 回答ボタン
    # 結果を表示する画面
    $result_disp = $('#result_disp')
    $submission_num = $('#submission_num')
    $correct_num = $('#correct_num')
    $result_record = $('#result_record')
    $reset = $('#reset')


    ## グローバル変数・定数
    DONT_WAIT_TIME = 0
    LEVEL_INFO_DISP_TIME = 1500
    REGEX = /^[0-9]*$/


    ## 関数
    # 画面遷移用関数
    screenTransition = (current, to, time) ->
      setTimeout ->
        current.hide()
        to.fadeIn()
      , time
    # 記憶対象の数値を生成する関数
    generateNum = (digit) ->
      problemNum = ""
      for i in [1..digit] then problemNum += String(Math.floor(Math.random() * 10))
      return problemNum
    # レベル情報画面にレベル情報をセット
    setLevelInfoDisp = (level_info_array) ->
      $level_info_level.text(level_info_array[0])
      $level_info_digit.text(level_info_array[1])
      $level_info_time.text(level_info_array[2] + '秒')
    # 問題画面と結果画面に正解をセットする
    setCorrectAnswerToDisp = (memorize_this_num) ->
      $show_num_disp.text(memorize_this_num)
      $correct_num.text(memorize_this_num)
    # 回答フォームの入力の上限値を追加する
    setMaxLengthToInput = (max_length) ->
      $answerInput.attr('maxlength', max_length)
    # 採点結果を取得するための関数
    checkAnswer = (answer, correct) ->
      correct_num = 0
      correction_num = ""
      for i in [0...correct.length]
        if answer[i] is correct[i]
          correct_num++
          correction_num += correct[i]
        else
          if answer[i] is undefined then correction_num += "<span style='color:#ff7300;'>_</span>"
          else correction_num += "<span style='color:#ff7300;'>" + answer[i] + "</span>"
      result_record = correct_num + "/" + correct.length + " (" + ((correct_num / correct.length) * 100).toFixed(1) + "%)"
      return [correction_num, result_record]
    # 採点結果を描画するための関数
    generateResultDisp = (correction_num, result_record) ->
      $submission_num.html(correction_num)
      $result_record.text(result_record)
    # 諸々を初期化用関数
    init = ->
      $answerInput.val("")
      $answerErrorBox.empty()


    ## イベント処理
    # レベル選択時
    $level_btn.click ->
      # 選択したレベルの情報を配列として取得。[レベル, 桁数, 秒数]が入る。
      level_info_array = $(this).data('level_info')
      # レベル情報画面にレベル情報をセット
      setLevelInfoDisp(level_info_array)
      # 問題画面と結果画面に正解をセットする
      setCorrectAnswerToDisp(generateNum(level_info_array[1]))
      # 回答フォームの入力の上限値を追加する
      setMaxLengthToInput(level_info_array[1])
      # レベル選択画面 => レベル情報画面
      screenTransition($level_disp, $level_info_disp, DONT_WAIT_TIME)
      # レベル情報表示画面 => 問題画面を表示する画面
      screenTransition($level_info_disp, $show_num_disp, LEVEL_INFO_DISP_TIME)
      # 記憶対象となる数値を表示する画面 => 回答画面
      screenTransition($show_num_disp, $answer_disp, (LEVEL_INFO_DISP_TIME + level_info_array[2] * 1000))
    # 回答ボタン選択時
    $answerBtn.click ->
      REGEX = /^[0-9]*$/
      if REGEX.exec($answerInput.val())
        # 回答画面 => 結果表示画面
        screenTransition($answer_disp, $result_disp, DONT_WAIT_TIME)
        [correction_num, result_record] = checkAnswer($answerInput.val(), $show_num_disp.text())
        generateResultDisp(correction_num, result_record)
      else
        $answerErrorBox.text("入力した値に誤りがあります。（数値のみ）")
    # 「レベルを選択する」ボタンを押した時
    $reset.click ->
      # 諸々を初期化用関数
      init()
      # 結果表示画面 => レベル選択画面
      screenTransition($result_disp, $level_disp, DONT_WAIT_TIME)
